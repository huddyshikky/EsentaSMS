@page "/Organisation"
@inject NavigationManager navigationManager
@inject IOrganisationService OrganisationService
@rendermode InteractiveServer


<div class="container ">
    <div class="col-md-10 mx-auto">
        <div class="row ">
            <div class="card shadow overflow-auto">
                <div class="card-header ">
                    <div class="row">
                        <div class="col">Organisation Details</div>
                        <a class="m-2 col-2 btn btn-outline-danger float-end" @onclick="OnClose">X</a>
                        @*  <div class="col-2 mx-auto">
                        <div class="row mx-auto">

                        <button type="button"  @onclick='(()=>navigationManager.NavigateTo("/",true))'>X</button>
                        </div>
                        </div> *@
                    </div>

                </div>

                <div class="card-body">

                    <button type="button" class="btn btn-outline-success mb-2" @onclick="AddOrganisation">Add New</button>
                    <br />
                    @if (Organisations != null)
                    {
                        @foreach (var Organisation in Organisations)
                        {
                            <OrganisationItemComponent Organisation="Organisation" OnDelete="OnDelete"></OrganisationItemComponent>
                        }

                    }
                </div>

                <div class="card-footer">
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Organisation>? Organisations;

    protected override async Task OnInitializedAsync()
    {
        var result = await OrganisationService.GetAllOrganisationAsync();
        Organisations = result.ToList();
    }
    private void AddOrganisation()
    {
        navigationManager.NavigateTo("/addOrganisation");
    }
    private void OnOrganisationAdded(Organisation newOrganisation)
    {
        Organisations.Add(newOrganisation);
        StateHasChanged();
    }
    private void OnDelete(Organisation organisation)
    {
        Organisations.Remove(organisation);
        StateHasChanged();
    }

    private void OnClose()
    {
        navigationManager.NavigateTo("/");
    }

}

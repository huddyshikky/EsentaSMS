@page "/addRecipientGrp"
@inject NavigationManager navigationManager
@inject IRecipientGrpService RecipientGrpService
<div class="card shadow border-0 align-items-center">
    <div class=" card-header">
        <div class="row">
            <div class="col">Add RecipientGrp Details </div>
            <div class="col-2"><button type="button" class=" btn btn-outline-danger" @onclick="OnClose">X</button></div>          
        </div>
        
    </div>

    <div class="card-body">
        @if (RecipientGrp != null)
        {
            <EditForm Model="RecipientGrp" OnValidSubmit="OnValidSubmit">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <ValidationSummary></ValidationSummary>
                <div class="form-group">
                    <label for="GroupName">Group Name</label>
                    <InputText id="GroupName" placeholder="GroupName" class="form-control" @bind-Value="RecipientGrp.GroupName"></InputText>
                </div>
               
                <br/>
                <button type="submit" class="btn btn-primary ">Save</button>
            </EditForm>
        }

    </div>
</div>


<br />


@code {
    private RecipientGrp? RecipientGrp = new();

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();

    }
    private async void OnValidSubmit()
    {
        if (this.RecipientGrp!=null)
        {
            await RecipientGrpService.AddRecipientGrpAsync(this.RecipientGrp);
            OnClose();
        }

    }
    private void OnClose()
    {
        navigationManager.NavigateTo("/RecipientGrp");
    }
}
